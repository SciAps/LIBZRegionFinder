/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sciaps;

import com.sciaps.common.ThreadUtils;
import java.awt.Color;
import java.io.IOException;
import java.util.logging.Level;
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpPut;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import org.json.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 *
 * @author jchen
 */
public class SpectrometerStackPanel extends javax.swing.JPanel {

    Logger logger_ = LoggerFactory.getLogger(SpectrometerStackPanel.class);

    SpecialRasterPanel specialRasterPanel_;

    XYSeries xySeries_;
    XYDataset dataset_;
    JFreeChart chart_;
    ChartPanel chartPanel_;

    boolean bTestInProgress_ = false;

    /**
     * Creates new form SpecktrometerStackPanel
     */
    public SpectrometerStackPanel() {
        initComponents();

        progbarRasterTest_.setVisible(false);
        progbarRasterTest_.setValue(0);
            
        specialRasterPanel_ = new SpecialRasterPanel();

        xySeries_ = new XYSeries("Data");
        XYSeriesCollection xySeriesCollection = new XYSeriesCollection();
        xySeriesCollection.addSeries(xySeries_);

        chart_ = createChart((XYDataset) xySeriesCollection);
        chartPanel_ = new ChartPanel(chart_);

        displayPanel_.add(chartPanel_);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        controlPanel_ = new javax.swing.JPanel();
        btnScan_ = new javax.swing.JButton();
        progbarRasterTest_ = new javax.swing.JProgressBar();
        displayPanel_ = new javax.swing.JPanel();

        setLayout(new java.awt.GridBagLayout());

        controlPanel_.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        controlPanel_.setLayout(new java.awt.GridBagLayout());

        btnScan_.setText("SCAN");
        btnScan_.setMaximumSize(new java.awt.Dimension(100, 30));
        btnScan_.setMinimumSize(new java.awt.Dimension(100, 30));
        btnScan_.setPreferredSize(new java.awt.Dimension(100, 30));
        btnScan_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnScan_ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        controlPanel_.add(btnScan_, gridBagConstraints);

        progbarRasterTest_.setMaximumSize(new java.awt.Dimension(100, 14));
        progbarRasterTest_.setMinimumSize(new java.awt.Dimension(100, 14));
        progbarRasterTest_.setPreferredSize(new java.awt.Dimension(100, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        controlPanel_.add(progbarRasterTest_, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(controlPanel_, gridBagConstraints);

        displayPanel_.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        displayPanel_.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(displayPanel_, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void btnScan_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnScan_ActionPerformed

        JSONObject rasterData = specialRasterPanel_.getRasterData();

        if (rasterData != null) {
            
            bTestInProgress_ = true;
            
            ThreadUtils.CPUThreads.execute(new Runnable() {

                @Override
                public void run() {
                    int i = 0;
                    logger_.info("Starting Progressive Bar.");
                    progbarRasterTest_.setVisible(true);
                    while (bTestInProgress_) {
                        progbarRasterTest_.setValue(i);
                        try {
                            Thread.sleep(1000);
                            i+= 10;
                        } catch (InterruptedException ex) {
                            //logger_.error("Thread sleep failed");
                        }
                        
                    }
                }
            });
            
            ThreadUtils.IOThreads.execute(new Runnable() {

                @Override
                public void run() {
                    startRasterTest(rasterData);
                }
            });
        }
    }//GEN-LAST:event_btnScan_ActionPerformed

    private JFreeChart createChart(XYDataset dataset) {

        // create the chart...
        final JFreeChart chart = ChartFactory.createXYLineChart(
                "Spectro Meter Stack", // chart title
                "Wave Length", // x axis label
                "Intensity", // y axis label
                dataset, // data
                PlotOrientation.VERTICAL,
                false, // include legend
                true, // tooltips
                false // urls
        );

        // NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...
        chart.setBackgroundPaint(Color.white);

        // final StandardLegend legend = (StandardLegend) chart.getLegend();
        // legend.setDisplaySeriesShapes(true);
        // get a reference to the plot for further customisation...
        final XYPlot plot = chart.getXYPlot();
        plot.setBackgroundPaint(Color.lightGray);
        //    plot.setAxisOffset(new Spacer(Spacer.ABSOLUTE, 5.0, 5.0, 5.0, 5.0));
        plot.setDomainGridlinePaint(Color.white);
        plot.setRangeGridlinePaint(Color.white);

        //final XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();
        //renderer.setSeriesLinesVisible(0, true);
        //renderer.setSeriesShapesVisible(1, false);
        //plot.setRenderer(renderer);
        // change the auto tick unit selection to integer units only...
        final NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
        rangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
        // OPTIONAL CUSTOMISATION COMPLETED.

        return chart;
    }

    public void showSpecialRasterDisplay() {
        specialRasterPanel_.showPopup();
    }

    private void startRasterTest(JSONObject rasterData) {
        logger_.info("starting a raster test");
        
        btnScan_.setEnabled(false);
        
        CloseableHttpClient httpclient = HttpClients.createDefault();
 
        try {
            Thread.sleep(10000);
        } catch (InterruptedException ex) {
            java.util.logging.Logger.getLogger(SpectrometerStackPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {

            String URL = Common.LIBZ_URL + "/rastertest";
            logger_.info("LIBZ URL: " + URL);
            
            HttpPut httpPut = new HttpPut(URL);

            StringEntity input;
            input = new StringEntity(rasterData.toString());

            httpPut.setEntity(input);

            // The underlying HTTP connection is still held by the response object
            // to allow the response content to be streamed directly from the network socket.
            // In order to ensure correct deallocation of system resources
            // the user MUST call CloseableHttpResponse#close() from a finally clause.
            // Please note that if response content is not fully consumed the underlying
            // connection cannot be safely re-used and will be shut down and discarded
            // by the connection manager.
            CloseableHttpResponse response1 = httpclient.execute(httpPut);
            System.out.println(response1.getStatusLine());
            HttpEntity entity1 = response1.getEntity();

            // do something useful with the response body
            // and ensure it is fully consumed
            EntityUtils.consume(entity1);
            
            logger_.info("Raster test completed.");

        } catch (IOException ex) {
            logger_.error("Raster test failed", ex);
        } finally {

            try {
                httpclient.close();
            } catch (IOException ex) {
                logger_.error("Raster Test: Http client close failed", ex);
            }
            
            bTestInProgress_ = false;
            progbarRasterTest_.setVisible(false);
            progbarRasterTest_.setValue(0);
            
            btnScan_.setEnabled(true);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnScan_;
    private javax.swing.JPanel controlPanel_;
    private javax.swing.JPanel displayPanel_;
    private javax.swing.JProgressBar progbarRasterTest_;
    // End of variables declaration//GEN-END:variables
}
