/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sciaps.view;

import com.sciaps.common.ThreadUtils;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.logging.Level;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 *
 * @author jchen
 */
public class ProgressStatusPanel extends javax.swing.JPanel {

    private final Logger logger_ = LoggerFactory.getLogger(ProgressStatusPanel.class);
    private volatile boolean bTestInProgress_;
    private int stepValue_;
    private JDialog popupDisplay_;

    /**
     * Creates new form HTTPConfigPanel
     */
    public ProgressStatusPanel() {
        initComponents();
        bTestInProgress_ = false;
        stepValue_ = 1;
        createPopupDisplay();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        progressbar_ = new javax.swing.JProgressBar();
        jLabel4 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(progressbar_, gridBagConstraints);

        jLabel4.setBackground(new java.awt.Color(204, 204, 204));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Raster Test In Progress");
        jLabel4.setFocusable(false);
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel4.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jLabel4, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void createPopupDisplay() {
        popupDisplay_ = new JDialog();
        popupDisplay_.setResizable(false);
        popupDisplay_.setTitle("Raster Test In Progress ...");
        popupDisplay_.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        popupDisplay_.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                if (bTestInProgress_ == false)
                    e.getWindow().dispose();
            }
        });
        popupDisplay_.add(this, java.awt.BorderLayout.CENTER);
        popupDisplay_.setSize(new Dimension(350, 85));
        popupDisplay_.setLocationRelativeTo(this);
        popupDisplay_.setModal(true);
    }

    public void showPopup() {
        bTestInProgress_ = true;
        showProgress();
        popupDisplay_.setVisible(true);
    }

    public void closePopup() {
        bTestInProgress_ = false;
        popupDisplay_.dispose();
    }

    public void setSteppingValue(int val) {
        stepValue_ = val;
    }

    private void showProgress() {
        ThreadUtils.CPUThreads.execute(new Runnable() {

            @Override
            public void run() {
                int i = 0;

                while (bTestInProgress_) {
                    System.out.println(i);
                    final int val = i;
                    SwingUtilities.invokeLater(new Runnable() {
                        @Override
                        public void run() {
                            progressbar_.setValue(val);
                        }
                    });

                    try {
                        Thread.sleep(1000);

                        if (i < 85) {
                            i = i + stepValue_;
                        }

                    } catch (InterruptedException ex) {
                        //logger_.error("Thread sleep failed");
                    }
                }
                popupDisplay_.dispose();
            }
        });
        
        try {
            Thread.sleep(2000);
        } catch (InterruptedException ex) {
            java.util.logging.Logger.getLogger(ProgressStatusPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel4;
    private javax.swing.JProgressBar progressbar_;
    // End of variables declaration//GEN-END:variables
}
