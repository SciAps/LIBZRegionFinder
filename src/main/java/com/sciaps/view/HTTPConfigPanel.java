/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sciaps.view;

import com.sciaps.common.Constants;
import com.sciaps.common.webserver.LIBZHttpClient;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 *
 * @author jchen
 */
public class HTTPConfigPanel extends javax.swing.JPanel {

    private final Logger logger_ = LoggerFactory.getLogger(HTTPConfigPanel.class);

    private FrmMain frmParent_;
    
    private JDialog popupDisplay_;


    /**
     * Creates new form HTTPConfigPanel
     */
    public HTTPConfigPanel() {
        initComponents();

        createPopupDisplay();

        this.getRootPane().setDefaultButton(btnSave_);
        
        frmParent_ = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        btnSave_ = new javax.swing.JButton();
        btnCancel_ = new javax.swing.JButton();
        txtIPAddress_ = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Enter IP Address of LIBZ (example: 10.98.100.80)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jLabel1, gridBagConstraints);

        btnSave_.setText("SAVE");
        btnSave_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave_ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(btnSave_, gridBagConstraints);

        btnCancel_.setText("CANCEL");
        btnCancel_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancel_ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(btnCancel_, gridBagConstraints);

        txtIPAddress_.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtIPAddress_.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(txtIPAddress_, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancel_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancel_ActionPerformed
        popupDisplay_.dispose();
    }//GEN-LAST:event_btnCancel_ActionPerformed

    private void btnSave_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave_ActionPerformed

        //System.out.println("ActionPerformed");
        String ipaddress = txtIPAddress_.getText();
        if (com.sciaps.utils.Util.validateIPAddress(ipaddress)) {

            saveIPAddress(ipaddress);

            Constants.mHttpClient = new LIBZHttpClient("http://" + ipaddress + ":9000");
            popupDisplay_.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Invalid IP Address Syntax", "IP Addess",  JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSave_ActionPerformed

    private void createPopupDisplay() {
        popupDisplay_ = new JDialog();
        popupDisplay_.setResizable(false);
        popupDisplay_.setTitle("LIBZ Connection Setting");
        popupDisplay_.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        popupDisplay_.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                e.getWindow().dispose();
            }
        });
        popupDisplay_.add(this, java.awt.BorderLayout.CENTER);
        popupDisplay_.setSize(new Dimension(300, 150));
        popupDisplay_.setLocationRelativeTo(this);
        popupDisplay_.setModal(true);
    }

    private void saveIPAddress(String ipaddress) {
        logger_.info("Saving LIBZ IP Address: " + ipaddress);
        try {
            File file = new File(Constants.LIBZ_URL_FILE_NAME);

            // if file doesnt exists, then create it
            if (!file.exists()) {
                file.createNewFile();
            }

            FileWriter fw = new FileWriter(file.getAbsoluteFile());
            BufferedWriter bw = new BufferedWriter(fw);
            bw.write(ipaddress);
            bw.close();

            if (frmParent_ != null) {
                frmParent_.displayLibzIPAddress(ipaddress);
            }
            
            logger_.info("Save LIBZ IP Address: Done");
        } catch (IOException ex) {
            logger_.error("Save LIBZ IP Address Failed. " + ex.getMessage());
        }
    }

    public void setParentFrame(FrmMain frame) {
        frmParent_ = frame;
    }
    
    public void showPopup() {
        String ip = "127.0.0.1";
        txtIPAddress_.setText(ip);
        txtIPAddress_.setSelectionStart(0);
        txtIPAddress_.setSelectionEnd(ip.length());
        this.getRootPane().setDefaultButton(btnSave_);
        popupDisplay_.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel_;
    private javax.swing.JButton btnSave_;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField txtIPAddress_;
    // End of variables declaration//GEN-END:variables
}
