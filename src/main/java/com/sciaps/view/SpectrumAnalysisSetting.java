/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sciaps.view;

import com.sciaps.utils.CustomDialog;
import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.JTextField;

/**
 *
 * @author jchen
 */
public class SpectrumAnalysisSetting extends javax.swing.JPanel implements CustomDialog.CustomDialogCallback {

    private double searchRange_;
    private double peakFoundPercentage_;
    private double lgPeakFoundPercentage_;
    private double peakWeightPercentage_;
    
    /**
     * Creates new form SpectrumAnalysisSetting
     * @param searchRange
     * @param peakFoundPercentage
     * @param lgPeakFoundPercentage
     * @param peakWeightPercentage
     */
    public SpectrumAnalysisSetting(double searchRange, double peakFoundPercentage, double lgPeakFoundPercentage, double peakWeightPercentage) {
        initComponents();
        
        ImageIcon icon = createImageIcon("/images/help.png");
        btnHint_.setIcon(icon);
        
        searchRange_ = searchRange;
        peakFoundPercentage_ = peakFoundPercentage;
        lgPeakFoundPercentage_ = lgPeakFoundPercentage;
        peakWeightPercentage_ = peakWeightPercentage;
        
        txtSearchRange_.setText(String.valueOf(searchRange_));
        txtPeakFoundPercentage_.setText(String.valueOf(peakFoundPercentage_));
        txtLgPeakFoundPercentage_.setText(String.valueOf(lgPeakFoundPercentage_));
        txtPeakWeight_.setText(String.valueOf(peakWeightPercentage_));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel5 = new javax.swing.JLabel();
        txtPeakWeight_ = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtLgPeakFoundPercentage_ = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtPeakFoundPercentage_ = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtSearchRange_ = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnHint_ = new javax.swing.JButton();
        lblHelp_ = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        jLabel5.setText("Peak Weight (%):");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jLabel5, gridBagConstraints);

        txtPeakWeight_.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtPeakWeight_.setText("10");
        txtPeakWeight_.setMaximumSize(new java.awt.Dimension(77, 21));
        txtPeakWeight_.setMinimumSize(new java.awt.Dimension(77, 21));
        txtPeakWeight_.setPreferredSize(new java.awt.Dimension(77, 21));
        txtPeakWeight_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPeakWeight_ActionPerformed(evt);
            }
        });
        txtPeakWeight_.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPeakWeight_KeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        add(txtPeakWeight_, gridBagConstraints);

        jLabel6.setText("Large Peak Percentage (%):");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jLabel6, gridBagConstraints);

        txtLgPeakFoundPercentage_.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtLgPeakFoundPercentage_.setText("50");
        txtLgPeakFoundPercentage_.setMaximumSize(new java.awt.Dimension(77, 21));
        txtLgPeakFoundPercentage_.setMinimumSize(new java.awt.Dimension(77, 21));
        txtLgPeakFoundPercentage_.setPreferredSize(new java.awt.Dimension(77, 21));
        txtLgPeakFoundPercentage_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLgPeakFoundPercentage_ActionPerformed(evt);
            }
        });
        txtLgPeakFoundPercentage_.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLgPeakFoundPercentage_KeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        add(txtLgPeakFoundPercentage_, gridBagConstraints);

        jLabel7.setText("Search Range (+-nm):");
        jLabel7.setMaximumSize(null);
        jLabel7.setMinimumSize(null);
        jLabel7.setPreferredSize(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jLabel7, gridBagConstraints);

        txtPeakFoundPercentage_.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtPeakFoundPercentage_.setText("35");
        txtPeakFoundPercentage_.setMaximumSize(new java.awt.Dimension(77, 21));
        txtPeakFoundPercentage_.setMinimumSize(new java.awt.Dimension(77, 21));
        txtPeakFoundPercentage_.setPreferredSize(new java.awt.Dimension(77, 21));
        txtPeakFoundPercentage_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPeakFoundPercentage_ActionPerformed(evt);
            }
        });
        txtPeakFoundPercentage_.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPeakFoundPercentage_KeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        add(txtPeakFoundPercentage_, gridBagConstraints);

        jLabel8.setText("Peaks Found Percentage (%):");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jLabel8, gridBagConstraints);

        txtSearchRange_.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtSearchRange_.setText("0.12");
        txtSearchRange_.setMaximumSize(new java.awt.Dimension(77, 21));
        txtSearchRange_.setMinimumSize(new java.awt.Dimension(77, 21));
        txtSearchRange_.setPreferredSize(new java.awt.Dimension(77, 21));
        txtSearchRange_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchRange_ActionPerformed(evt);
            }
        });
        txtSearchRange_.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchRange_KeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        add(txtSearchRange_, gridBagConstraints);

        jLabel4.setBackground(new java.awt.Color(204, 204, 204));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Shot Average Setting");
        jLabel4.setFocusable(false);
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel4.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 6, 0);
        add(jLabel4, gridBagConstraints);

        btnHint_.setToolTipText("Shots per location");
        btnHint_.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnHint_.setMaximumSize(new java.awt.Dimension(25, 25));
        btnHint_.setMinimumSize(new java.awt.Dimension(25, 25));
        btnHint_.setPreferredSize(new java.awt.Dimension(25, 25));
        btnHint_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHint_ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(btnHint_, gridBagConstraints);

        lblHelp_.setForeground(new java.awt.Color(0, 51, 255));
        lblHelp_.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        add(lblHelp_, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void txtPeakWeight_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPeakWeight_ActionPerformed
        peakWeightPercentage_ = getPositiveDoubleValue(txtPeakWeight_);
    }//GEN-LAST:event_txtPeakWeight_ActionPerformed

    private void txtPeakWeight_KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPeakWeight_KeyReleased
        peakWeightPercentage_ = getPositiveDoubleValue(txtPeakWeight_);
    }//GEN-LAST:event_txtPeakWeight_KeyReleased

    private void txtLgPeakFoundPercentage_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLgPeakFoundPercentage_ActionPerformed
        lgPeakFoundPercentage_ = getPositiveDoubleValue(txtLgPeakFoundPercentage_);
    }//GEN-LAST:event_txtLgPeakFoundPercentage_ActionPerformed

    private void txtLgPeakFoundPercentage_KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLgPeakFoundPercentage_KeyReleased
        lgPeakFoundPercentage_ = getPositiveDoubleValue(txtLgPeakFoundPercentage_);
    }//GEN-LAST:event_txtLgPeakFoundPercentage_KeyReleased

    private void txtPeakFoundPercentage_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPeakFoundPercentage_ActionPerformed
        peakFoundPercentage_ = getPositiveDoubleValue(txtPeakFoundPercentage_);
    }//GEN-LAST:event_txtPeakFoundPercentage_ActionPerformed

    private void txtPeakFoundPercentage_KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPeakFoundPercentage_KeyReleased
        peakFoundPercentage_ = getPositiveDoubleValue(txtPeakFoundPercentage_);
    }//GEN-LAST:event_txtPeakFoundPercentage_KeyReleased

    private void txtSearchRange_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchRange_ActionPerformed
        searchRange_ = getPositiveDoubleValue(txtSearchRange_);
    }//GEN-LAST:event_txtSearchRange_ActionPerformed

    private void txtSearchRange_KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchRange_KeyReleased
        searchRange_ = getPositiveDoubleValue(txtSearchRange_);
    }//GEN-LAST:event_txtSearchRange_KeyReleased

    private void btnHint_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHint_ActionPerformed
        showHint("Settings are used to determine peak accept/reject.");
    }//GEN-LAST:event_btnHint_ActionPerformed

    private double getPositiveDoubleValue(JTextField textField) {
        double retVal = Double.NaN;

        try {
            retVal = Double.parseDouble(textField.getText());
            if (retVal > 0) {
                textField.setBackground(Color.white);
            } else {
                retVal = Double.NaN;
                textField.setBackground(Color.red);
            }
        } catch (NumberFormatException e) {
            retVal = Double.NaN;
            textField.setBackground(Color.red);
        }

        return retVal;
    }
    
    private void showHint(String hint) {
        
        if (lblHelp_.getText().compareTo(hint) != 0) {
            lblHelp_.setText(hint);
        } else {
           lblHelp_.setText("");
        }
    }

    private ImageIcon createImageIcon(String path) {
        
        java.net.URL imgURL = getClass().getResource(path);
        if (imgURL != null) {
            return new ImageIcon(imgURL);         
        }
        
        return null;
    }
    
    public double getSearchRange() {
        return searchRange_;
    }
    
    public double getPeakFoundPercentage() {
        return peakFoundPercentage_;
    }
    
    public double getLgPeakPercentage() {
        return lgPeakFoundPercentage_;
    }
    
    public double getPeakWeightPercentage() {
        return peakWeightPercentage_;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHint_;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lblHelp_;
    private javax.swing.JTextField txtLgPeakFoundPercentage_;
    private javax.swing.JTextField txtPeakFoundPercentage_;
    private javax.swing.JTextField txtPeakWeight_;
    private javax.swing.JTextField txtSearchRange_;
    // End of variables declaration//GEN-END:variables

    @Override
    public boolean getDialogCloseConfirmation() {
        return !(Double.isNaN(searchRange_) || 
                Double.isNaN(peakFoundPercentage_)|| 
                Double.isNaN(lgPeakFoundPercentage_)|| 
                Double.isNaN(peakWeightPercentage_));
    }
}
