/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sciaps.view;

import com.sciaps.common.Constants;
import com.sciaps.common.webserver.LIBZHttpClient;
import com.sciaps.utils.CustomDialog;
import com.sciaps.utils.Util;
import java.awt.Dimension;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JFrame;
import org.jfree.ui.RefineryUtilities;

/**
 *
 * @author jchen
 */
public final class FrmMain extends javax.swing.JFrame {

    SpectrometerStackPanel spectrometerStackPanel_;

    /**
     * Creates new form frmMain
     */
    public FrmMain() {
        initComponents();

        setSciapsIcon();

        spectrometerStackPanel_ = new SpectrometerStackPanel();
        setDisplayPanel(spectrometerStackPanel_);

        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                readIPAddress();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        displayPanel_ = new javax.swing.JPanel();
        mnuMainBar = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mnuFileImport_ = new javax.swing.JMenu();
        mnuFileImportCSV_ = new javax.swing.JMenuItem();
        mnuFileImportJsonGZip_ = new javax.swing.JMenuItem();
        mnuFileImportRegionText_ = new javax.swing.JMenuItem();
        mnuFileImportRegionFile_ = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mnuFileExport_ = new javax.swing.JMenu();
        mnuExportCSV_ = new javax.swing.JMenu();
        mnuFileExportCSVAll_ = new javax.swing.JMenuItem();
        mnuExportCSVSelected_ = new javax.swing.JMenuItem();
        mnuExportJsonGZip_ = new javax.swing.JMenu();
        mnuExportJsonGZipAll_ = new javax.swing.JMenuItem();
        mnuExportJsonGZipSelected_ = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mnuFileExit = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        mnuConfigDarkPixelSubtraction_ = new javax.swing.JCheckBoxMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        mnuSettingBaselineRmParams_ = new javax.swing.JMenuItem();
        mnuConfig = new javax.swing.JMenu();
        mnuConfigSetLibzIP = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Region Finder");

        displayPanel_.setLayout(new java.awt.BorderLayout());
        getContentPane().add(displayPanel_, java.awt.BorderLayout.CENTER);

        mnuMainBar.setToolTipText("");

        mnuFile.setText("File");

        mnuFileImport_.setText("Import");

        mnuFileImportCSV_.setText("CSV");
        mnuFileImportCSV_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileImportCSV_ActionPerformed(evt);
            }
        });
        mnuFileImport_.add(mnuFileImportCSV_);

        mnuFileImportJsonGZip_.setText("Json GZip");
        mnuFileImportJsonGZip_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileImportJsonGZip_ActionPerformed(evt);
            }
        });
        mnuFileImport_.add(mnuFileImportJsonGZip_);

        mnuFileImportRegionText_.setText("Region Text");
        mnuFileImportRegionText_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileImportRegionText_ActionPerformed(evt);
            }
        });
        mnuFileImport_.add(mnuFileImportRegionText_);

        mnuFileImportRegionFile_.setText("Region File");
        mnuFileImportRegionFile_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileImportRegionFile_ActionPerformed(evt);
            }
        });
        mnuFileImport_.add(mnuFileImportRegionFile_);

        mnuFile.add(mnuFileImport_);
        mnuFile.add(jSeparator2);

        mnuFileExport_.setText("Export");

        mnuExportCSV_.setText("CSV");

        mnuFileExportCSVAll_.setText("All Shots");
        mnuFileExportCSVAll_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileExportCSVAll_ActionPerformed(evt);
            }
        });
        mnuExportCSV_.add(mnuFileExportCSVAll_);

        mnuExportCSVSelected_.setText("Selected Shot(s)");
        mnuExportCSVSelected_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuExportCSVSelected_ActionPerformed(evt);
            }
        });
        mnuExportCSV_.add(mnuExportCSVSelected_);

        mnuFileExport_.add(mnuExportCSV_);

        mnuExportJsonGZip_.setText("Json GZip");

        mnuExportJsonGZipAll_.setText("All Shots");
        mnuExportJsonGZipAll_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuExportJsonGZipAll_ActionPerformed(evt);
            }
        });
        mnuExportJsonGZip_.add(mnuExportJsonGZipAll_);

        mnuExportJsonGZipSelected_.setText("Selected Shot(s)");
        mnuExportJsonGZipSelected_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuExportJsonGZipSelected_ActionPerformed(evt);
            }
        });
        mnuExportJsonGZip_.add(mnuExportJsonGZipSelected_);

        mnuFileExport_.add(mnuExportJsonGZip_);

        mnuFile.add(mnuFileExport_);
        mnuFile.add(jSeparator1);

        mnuFileExit.setText("Exit");
        mnuFileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileExitActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileExit);

        mnuMainBar.add(mnuFile);

        jMenu1.setText("Settings");

        mnuConfigDarkPixelSubtraction_.setSelected(true);
        mnuConfigDarkPixelSubtraction_.setText("Dark Pixel Subtraction On");
        mnuConfigDarkPixelSubtraction_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuConfigDarkPixelSubtraction_ActionPerformed(evt);
            }
        });
        jMenu1.add(mnuConfigDarkPixelSubtraction_);
        jMenu1.add(jSeparator3);

        mnuSettingBaselineRmParams_.setText("Baseline Removal Parameters");
        mnuSettingBaselineRmParams_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSettingBaselineRmParams_ActionPerformed(evt);
            }
        });
        jMenu1.add(mnuSettingBaselineRmParams_);

        mnuMainBar.add(jMenu1);

        mnuConfig.setText("Config");

        mnuConfigSetLibzIP.setText("Set LIBZ IP");
        mnuConfigSetLibzIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuConfigSetLibzIPActionPerformed(evt);
            }
        });
        mnuConfig.add(mnuConfigSetLibzIP);

        mnuMainBar.add(mnuConfig);

        setJMenuBar(mnuMainBar);
        mnuMainBar.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuFileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_mnuFileExitActionPerformed

    private void mnuConfigSetLibzIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuConfigSetLibzIPActionPerformed
        doShowIPAddressDisplay();
    }//GEN-LAST:event_mnuConfigSetLibzIPActionPerformed

    private void mnuFileExportCSVAll_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileExportCSVAll_ActionPerformed
        spectrometerStackPanel_.exportCSVAll();
    }//GEN-LAST:event_mnuFileExportCSVAll_ActionPerformed

    private void mnuFileImportRegionText_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileImportRegionText_ActionPerformed
        spectrometerStackPanel_.getRegionTextFromUser();
    }//GEN-LAST:event_mnuFileImportRegionText_ActionPerformed

    private void mnuFileImportRegionFile_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileImportRegionFile_ActionPerformed
        spectrometerStackPanel_.getRegionTextFile();
    }//GEN-LAST:event_mnuFileImportRegionFile_ActionPerformed

    private void mnuFileImportCSV_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileImportCSV_ActionPerformed
        spectrometerStackPanel_.importCSV();
    }//GEN-LAST:event_mnuFileImportCSV_ActionPerformed

    private void mnuExportJsonGZipAll_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuExportJsonGZipAll_ActionPerformed
        spectrometerStackPanel_.exportJsonGzipAll();
    }//GEN-LAST:event_mnuExportJsonGZipAll_ActionPerformed

    private void mnuFileImportJsonGZip_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileImportJsonGZip_ActionPerformed
        spectrometerStackPanel_.importJsonGzip();
    }//GEN-LAST:event_mnuFileImportJsonGZip_ActionPerformed

    private void mnuExportJsonGZipSelected_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuExportJsonGZipSelected_ActionPerformed
        spectrometerStackPanel_.exportJsonGzipSelected();
    }//GEN-LAST:event_mnuExportJsonGZipSelected_ActionPerformed

    private void mnuExportCSVSelected_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuExportCSVSelected_ActionPerformed
        spectrometerStackPanel_.exportCSVSelected();
    }//GEN-LAST:event_mnuExportCSVSelected_ActionPerformed

    private void mnuConfigDarkPixelSubtraction_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuConfigDarkPixelSubtraction_ActionPerformed
        spectrometerStackPanel_.setDarkPixelSubtractionOnOff(mnuConfigDarkPixelSubtraction_.isSelected());
    }//GEN-LAST:event_mnuConfigDarkPixelSubtraction_ActionPerformed

    private void mnuSettingBaselineRmParams_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSettingBaselineRmParams_ActionPerformed
        spectrometerStackPanel_.showBaselineRemovalSettings();
    }//GEN-LAST:event_mnuSettingBaselineRmParams_ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {

                FrmMain frmMain = new FrmMain();
                frmMain.setSize(new Dimension(1200, 800));
                frmMain.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                RefineryUtilities.centerFrameOnScreen(frmMain);
                frmMain.setVisible(true);
            }
        });
    }

    public void setDisplayPanel(JComponent panel) {
        displayPanel_.removeAll();
        displayPanel_.add(panel);
        displayPanel_.revalidate();
        displayPanel_.repaint();
    }

    public void displayLibzIPAddress(final String ipAddress) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                setTitle("Region Finder - LIBZ@" + ipAddress);
            }
        });
    }

    private void doShowIPAddressDisplay() {
        LibzIPPanel httpConfigPanel;
        httpConfigPanel = new LibzIPPanel();
        httpConfigPanel.setParentFrame(this);
        CustomDialog dialog = new CustomDialog(this, "LIBZ IP Address",
                httpConfigPanel, CustomDialog.OK_CANCEL_OPTION);
        dialog.setSize(350, 150);
        dialog.setVisible(true);
    }

    private void readIPAddress() {

        String address = Util.getIPAddress();
        if (address != null) {
            Constants.mHttpClient = new LIBZHttpClient("http://" + address + ":9000");
            displayLibzIPAddress(address);
        } else {
            doShowIPAddressDisplay();
        }
    }

    private void setSciapsIcon() {

        java.net.URL imgURL = getClass().getResource("/images/sciaps_icon.png");
        if (imgURL != null) {
            ImageIcon icon = new ImageIcon(imgURL);
            this.setIconImage(icon.getImage());
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel displayPanel_;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JMenu mnuConfig;
    private javax.swing.JCheckBoxMenuItem mnuConfigDarkPixelSubtraction_;
    private javax.swing.JMenuItem mnuConfigSetLibzIP;
    private javax.swing.JMenuItem mnuExportCSVSelected_;
    private javax.swing.JMenu mnuExportCSV_;
    private javax.swing.JMenuItem mnuExportJsonGZipAll_;
    private javax.swing.JMenuItem mnuExportJsonGZipSelected_;
    private javax.swing.JMenu mnuExportJsonGZip_;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenuItem mnuFileExit;
    private javax.swing.JMenuItem mnuFileExportCSVAll_;
    private javax.swing.JMenu mnuFileExport_;
    private javax.swing.JMenuItem mnuFileImportCSV_;
    private javax.swing.JMenuItem mnuFileImportJsonGZip_;
    private javax.swing.JMenuItem mnuFileImportRegionFile_;
    private javax.swing.JMenuItem mnuFileImportRegionText_;
    private javax.swing.JMenu mnuFileImport_;
    private javax.swing.JMenuBar mnuMainBar;
    private javax.swing.JMenuItem mnuSettingBaselineRmParams_;
    // End of variables declaration//GEN-END:variables
}
