/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sciaps.view;

import com.sciaps.common.ThreadUtils;
import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.JColorChooser;
import javax.swing.SwingUtilities;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.Range;

/**
 *
 * @author jchen
 */
public class PlotConfigPanel extends javax.swing.JPanel {

    private final int LEFT = 0;
    private final int RIGHT = 1;
    private final int UP = 2;
    private final int DOWN = 3;

    private final XYPlot plot_;
    private final ValueAxis rangeAxis_;
    private final ValueAxis domainAxis_;
    boolean mousePressed_;

    /**
     * Creates new form PlotRangeSetterPanel
     *
     * @param plot
     */
    public PlotConfigPanel(XYPlot plot) {
        initComponents();

        plot_ = plot;
        rangeAxis_ = plot.getRangeAxis();
        domainAxis_ = plot.getDomainAxis();

        btnLeft_.setIcon(new ImageIcon("./images/left.png"));
        btnRight_.setIcon(new ImageIcon("./images/right.png"));
        btnAutoRange_.setIcon(new ImageIcon("./images/center.png"));
        btnUp_.setIcon(new ImageIcon("./images/up.png"));
        btnDown_.setIcon(new ImageIcon("./images/down.png"));

        mousePressed_ = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chkDomainGridline_ = new javax.swing.JCheckBox();
        chkRangeGridline_ = new javax.swing.JCheckBox();
        btnDown_1 = new javax.swing.JButton();
        btnLeft_ = new javax.swing.JButton();
        btnRight_ = new javax.swing.JButton();
        btnAutoRange_ = new javax.swing.JButton();
        btnUp_ = new javax.swing.JButton();
        btnDown_ = new javax.swing.JButton();

        chkDomainGridline_.setSelected(true);
        chkDomainGridline_.setText("Domain Gridline");
        chkDomainGridline_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDomainGridline_ActionPerformed(evt);
            }
        });
        add(chkDomainGridline_);

        chkRangeGridline_.setSelected(true);
        chkRangeGridline_.setText("Range Gridline");
        chkRangeGridline_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkRangeGridline_ActionPerformed(evt);
            }
        });
        add(chkRangeGridline_);

        btnDown_1.setText("BG Color");
        btnDown_1.setToolTipText("Shift down");
        btnDown_1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnDown_1.setMaximumSize(new java.awt.Dimension(35, 35));
        btnDown_1.setMinimumSize(new java.awt.Dimension(35, 35));
        btnDown_1.setPreferredSize(new java.awt.Dimension(60, 20));
        btnDown_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDown_1ActionPerformed(evt);
            }
        });
        add(btnDown_1);

        btnLeft_.setToolTipText("Shift left");
        btnLeft_.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnLeft_.setMaximumSize(new java.awt.Dimension(35, 35));
        btnLeft_.setMinimumSize(new java.awt.Dimension(35, 35));
        btnLeft_.setPreferredSize(new java.awt.Dimension(35, 35));
        btnLeft_.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnLeft_MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnLeft_MouseReleased(evt);
            }
        });
        btnLeft_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeft_ActionPerformed(evt);
            }
        });
        add(btnLeft_);

        btnRight_.setToolTipText("Shift right");
        btnRight_.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnRight_.setMaximumSize(new java.awt.Dimension(35, 35));
        btnRight_.setMinimumSize(new java.awt.Dimension(35, 35));
        btnRight_.setPreferredSize(new java.awt.Dimension(35, 35));
        btnRight_.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnRight_MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnRight_MouseReleased(evt);
            }
        });
        btnRight_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRight_ActionPerformed(evt);
            }
        });
        add(btnRight_);

        btnAutoRange_.setToolTipText("Center");
        btnAutoRange_.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnAutoRange_.setMaximumSize(new java.awt.Dimension(35, 35));
        btnAutoRange_.setMinimumSize(new java.awt.Dimension(35, 35));
        btnAutoRange_.setPreferredSize(new java.awt.Dimension(35, 35));
        btnAutoRange_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutoRange_ActionPerformed(evt);
            }
        });
        add(btnAutoRange_);

        btnUp_.setToolTipText("Shift up");
        btnUp_.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnUp_.setMaximumSize(new java.awt.Dimension(35, 35));
        btnUp_.setMinimumSize(new java.awt.Dimension(35, 35));
        btnUp_.setPreferredSize(new java.awt.Dimension(35, 35));
        btnUp_.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnUp_MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnUp_MouseReleased(evt);
            }
        });
        btnUp_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUp_ActionPerformed(evt);
            }
        });
        add(btnUp_);

        btnDown_.setToolTipText("Shift down");
        btnDown_.setMargin(new java.awt.Insets(0, 0, 0, 0));
        btnDown_.setMaximumSize(new java.awt.Dimension(35, 35));
        btnDown_.setMinimumSize(new java.awt.Dimension(35, 35));
        btnDown_.setPreferredSize(new java.awt.Dimension(35, 35));
        btnDown_.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnDown_MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnDown_MouseReleased(evt);
            }
        });
        btnDown_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDown_ActionPerformed(evt);
            }
        });
        add(btnDown_);
    }// </editor-fold>//GEN-END:initComponents

    private void btnLeft_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeft_ActionPerformed
        doShiftLeft();
    }//GEN-LAST:event_btnLeft_ActionPerformed

    private void btnRight_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRight_ActionPerformed
        doShiftRight();
    }//GEN-LAST:event_btnRight_ActionPerformed

    private void btnUp_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUp_ActionPerformed
        doShiftUp();
    }//GEN-LAST:event_btnUp_ActionPerformed

    private void btnDown_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDown_ActionPerformed
        doShiftDown();
    }//GEN-LAST:event_btnDown_ActionPerformed

    private void btnLeft_MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLeft_MousePressed
        mousePressed_ = true;
        doMousePressedAction(LEFT);

    }//GEN-LAST:event_btnLeft_MousePressed

    private void btnLeft_MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLeft_MouseReleased
        mousePressed_ = false;
    }//GEN-LAST:event_btnLeft_MouseReleased

    private void btnRight_MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRight_MousePressed
        mousePressed_ = true;
        doMousePressedAction(RIGHT);
    }//GEN-LAST:event_btnRight_MousePressed

    private void btnRight_MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRight_MouseReleased
        mousePressed_ = false;
    }//GEN-LAST:event_btnRight_MouseReleased

    private void btnUp_MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUp_MousePressed
        mousePressed_ = true;
        doMousePressedAction(UP);
    }//GEN-LAST:event_btnUp_MousePressed

    private void btnUp_MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUp_MouseReleased
        mousePressed_ = false;
    }//GEN-LAST:event_btnUp_MouseReleased

    private void btnDown_MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDown_MousePressed
        mousePressed_ = true;
        doMousePressedAction(DOWN);
    }//GEN-LAST:event_btnDown_MousePressed

    private void btnDown_MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDown_MouseReleased
        mousePressed_ = false;
    }//GEN-LAST:event_btnDown_MouseReleased

    private void btnAutoRange_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutoRange_ActionPerformed
        domainAxis_.setAutoRange(true);
        rangeAxis_.setAutoRange(true);
    }//GEN-LAST:event_btnAutoRange_ActionPerformed

    private void chkDomainGridline_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDomainGridline_ActionPerformed
        plot_.setDomainGridlinesVisible(chkDomainGridline_.isSelected());
    }//GEN-LAST:event_chkDomainGridline_ActionPerformed

    private void chkRangeGridline_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkRangeGridline_ActionPerformed
        plot_.setRangeGridlinesVisible(chkRangeGridline_.isSelected());
    }//GEN-LAST:event_chkRangeGridline_ActionPerformed

    private void btnDown_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDown_1ActionPerformed
        Color backgroundColor = JColorChooser.showDialog(null,
                "Choose chart background color", Color.white);
        plot_.setBackgroundPaint(backgroundColor);
    }//GEN-LAST:event_btnDown_1ActionPerformed

    private void doMousePressedAction(final int action) {

        ThreadUtils.IOThreads.execute(new Runnable() {

            @Override
            public void run() {
                while (mousePressed_) {
                    SwingUtilities.invokeLater(new Runnable() {
                        @Override
                        public void run() {

                            switch (action) {
                                case LEFT:
                                    doShiftLeft();
                                    break;
                                case RIGHT:
                                    doShiftRight();
                                    break;
                                case UP:
                                    doShiftUp();
                                    break;
                                case DOWN:
                                    doShiftDown();
                                    break;
                                default:
                                    mousePressed_ = false;
                            }
                        }
                    });

                    try {
                        Thread.sleep(100);
                    } catch (InterruptedException ex) {
                        mousePressed_ = false;
                    }

                }
            }
        });
    }

    private Range createDomainRange(final int action) {
        double lowerBound = domainAxis_.getRange().getLowerBound();
        double upperBound = domainAxis_.getRange().getUpperBound();
        double shiftValue = Math.ceil((upperBound - lowerBound) * .1);

        if (action == LEFT) {
            return (new Range(lowerBound - shiftValue, upperBound - shiftValue));
        } else if (action == RIGHT) {
            return (new Range(lowerBound + shiftValue, upperBound + shiftValue));
        }

        return null;
    }

    private Range createRangeRange(final int action) {
        double lowerBound = rangeAxis_.getRange().getLowerBound();
        double upperBound = rangeAxis_.getRange().getUpperBound();
        double shiftValue = Math.floor((upperBound - lowerBound) * .1);

        if (action == DOWN) {
            return (new Range(lowerBound - shiftValue, upperBound - shiftValue));
        } else if (action == UP) {
            return (new Range(lowerBound + shiftValue, upperBound + shiftValue));
        }

        return null;
    }

    private void doShiftLeft() {
        Range range = createDomainRange(LEFT);
        if (range != null) {
            domainAxis_.setRange(range);
        }
    }

    private void doShiftRight() {
        Range range = createDomainRange(RIGHT);
        if (range != null) {
            domainAxis_.setRange(range);
        }
    }

    private void doShiftUp() {
        Range range = createRangeRange(UP);
        if (range != null) {
            rangeAxis_.setRange(range);
        }
    }

    private void doShiftDown() {
        Range range = createRangeRange(DOWN);
        if (range != null) {
            rangeAxis_.setRange(range);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAutoRange_;
    private javax.swing.JButton btnDown_;
    private javax.swing.JButton btnDown_1;
    private javax.swing.JButton btnLeft_;
    private javax.swing.JButton btnRight_;
    private javax.swing.JButton btnUp_;
    private javax.swing.JCheckBox chkDomainGridline_;
    private javax.swing.JCheckBox chkRangeGridline_;
    // End of variables declaration//GEN-END:variables
}
