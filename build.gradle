apply plugin: 'java'

sourceCompatibility = '1.6'
targetCompatibility = '1.6'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

version = '1.0'

project.ext.set("mainClass", "com.sciaps.Main")
if (!hasProperty('mainClass')) {
    ext.mainClass = ''
}

//create a single Jar with all dependencies
jar {
    manifest {
        attributes 'Implementation-Title': 'LIBZRegionFinder',
                'Implementation-Version': version,
                'Main-Class': 'com.sciaps.Main'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

allprojects {
    repositories {
        mavenCentral()
        maven {
            url "http://maven.sciaps.local"
        }
        maven {
            url "http://files.couchbase.com/maven2/"
        }
    }
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.+'
    compile 'org.slf4j:slf4j-simple:1.7.+'
    compile 'org.jfree:jfreechart:1.0.19'
    compile 'org.json:json:20141113'
    compile 'net.sf.opencsv:opencsv:2.3'
    compile 'com.dev-smart:devsmart-swing:0.1.3'
    compile project('libraries/Common')
    compile project('libraries/SwingCommon')
    testCompile group: 'junit', name: 'junit', version: '4.10'
}

// setup for ProGuard
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'net.sf.proguard:proguard-gradle:5.1'
    }
}

// Task to shrink the jar to smaller size
task shrinkJarTask(dependsOn: 'jar', type: proguard.gradle.ProGuardTask) {
    
    injars ("${jar.archivePath}")
    outjars ("${jar.destinationDir}/${project.name}-${project.version}.jar")
    libraryjars  "${System.getProperty('java.home')}/lib/rt.jar"

    keep 'public class * { \
        public static void main(java.lang.String[]); \
    }'
    
    keep 'class com.sciaps.** { *;}'
    keep 'class org.apache.commons.logging.** { *; }'
    
    dontobfuscate
    
    dontwarn 'javax.**'
    dontwarn 'org.junit.**'
    dontwarn 'org.apache.commons.math.linear.**'
    dontwarn 'org.apache.avalon.**'
    dontwarn 'org.apache.log4j.**'
    dontwarn 'org.apache.log.**'
}
